// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/uber/kraken/build-index/tagtype (interfaces: DependencyResolver)

package mocktagtype

import (
	gomock "github.com/golang/mock/gomock"
	core "github.com/uber/kraken/core"
	reflect "reflect"
)

// MockDependencyResolver is a mock of DependencyResolver interface
type MockDependencyResolver struct {
	ctrl     *gomock.Controller
	recorder *MockDependencyResolverMockRecorder
}

// MockDependencyResolverMockRecorder is the mock recorder for MockDependencyResolver
type MockDependencyResolverMockRecorder struct {
	mock *MockDependencyResolver
}

// NewMockDependencyResolver creates a new mock instance
func NewMockDependencyResolver(ctrl *gomock.Controller) *MockDependencyResolver {
	mock := &MockDependencyResolver{ctrl: ctrl}
	mock.recorder = &MockDependencyResolverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockDependencyResolver) EXPECT() *MockDependencyResolverMockRecorder {
	return _m.recorder
}

// Resolve mocks base method
func (_m *MockDependencyResolver) Resolve(_param0 string, _param1 core.Digest) (core.DigestList, error) {
	ret := _m.ctrl.Call(_m, "Resolve", _param0, _param1)
	ret0, _ := ret[0].(core.DigestList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Resolve indicates an expected call of Resolve
func (_mr *MockDependencyResolverMockRecorder) Resolve(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Resolve", reflect.TypeOf((*MockDependencyResolver)(nil).Resolve), arg0, arg1)
}
