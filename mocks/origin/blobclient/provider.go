// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/uber/kraken/origin/blobclient (interfaces: Provider)

package mockblobclient

import (
	gomock "github.com/golang/mock/gomock"
	blobclient "github.com/uber/kraken/origin/blobclient"
	reflect "reflect"
)

// MockProvider is a mock of Provider interface
type MockProvider struct {
	ctrl     *gomock.Controller
	recorder *MockProviderMockRecorder
}

// MockProviderMockRecorder is the mock recorder for MockProvider
type MockProviderMockRecorder struct {
	mock *MockProvider
}

// NewMockProvider creates a new mock instance
func NewMockProvider(ctrl *gomock.Controller) *MockProvider {
	mock := &MockProvider{ctrl: ctrl}
	mock.recorder = &MockProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockProvider) EXPECT() *MockProviderMockRecorder {
	return _m.recorder
}

// Provide mocks base method
func (_m *MockProvider) Provide(_param0 string) blobclient.Client {
	ret := _m.ctrl.Call(_m, "Provide", _param0)
	ret0, _ := ret[0].(blobclient.Client)
	return ret0
}

// Provide indicates an expected call of Provide
func (_mr *MockProviderMockRecorder) Provide(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Provide", reflect.TypeOf((*MockProvider)(nil).Provide), arg0)
}
