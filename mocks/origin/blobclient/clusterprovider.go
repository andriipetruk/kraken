// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/uber/kraken/origin/blobclient (interfaces: ClusterProvider)

package mockblobclient

import (
	gomock "github.com/golang/mock/gomock"
	blobclient "github.com/uber/kraken/origin/blobclient"
	reflect "reflect"
)

// MockClusterProvider is a mock of ClusterProvider interface
type MockClusterProvider struct {
	ctrl     *gomock.Controller
	recorder *MockClusterProviderMockRecorder
}

// MockClusterProviderMockRecorder is the mock recorder for MockClusterProvider
type MockClusterProviderMockRecorder struct {
	mock *MockClusterProvider
}

// NewMockClusterProvider creates a new mock instance
func NewMockClusterProvider(ctrl *gomock.Controller) *MockClusterProvider {
	mock := &MockClusterProvider{ctrl: ctrl}
	mock.recorder = &MockClusterProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockClusterProvider) EXPECT() *MockClusterProviderMockRecorder {
	return _m.recorder
}

// Provide mocks base method
func (_m *MockClusterProvider) Provide(_param0 string) (blobclient.ClusterClient, error) {
	ret := _m.ctrl.Call(_m, "Provide", _param0)
	ret0, _ := ret[0].(blobclient.ClusterClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Provide indicates an expected call of Provide
func (_mr *MockClusterProviderMockRecorder) Provide(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Provide", reflect.TypeOf((*MockClusterProvider)(nil).Provide), arg0)
}
