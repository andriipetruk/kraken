// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/uber/kraken/lib/backend (interfaces: Client)

package mockbackend

import (
	gomock "github.com/golang/mock/gomock"
	core "github.com/uber/kraken/core"
	io "io"
	reflect "reflect"
)

// MockClient is a mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockClient) EXPECT() *MockClientMockRecorder {
	return _m.recorder
}

// Download mocks base method
func (_m *MockClient) Download(_param0 string, _param1 string, _param2 io.Writer) error {
	ret := _m.ctrl.Call(_m, "Download", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Download indicates an expected call of Download
func (_mr *MockClientMockRecorder) Download(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Download", reflect.TypeOf((*MockClient)(nil).Download), arg0, arg1, arg2)
}

// List mocks base method
func (_m *MockClient) List(_param0 string) ([]string, error) {
	ret := _m.ctrl.Call(_m, "List", _param0)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (_mr *MockClientMockRecorder) List(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "List", reflect.TypeOf((*MockClient)(nil).List), arg0)
}

// Stat mocks base method
func (_m *MockClient) Stat(_param0 string, _param1 string) (*core.BlobInfo, error) {
	ret := _m.ctrl.Call(_m, "Stat", _param0, _param1)
	ret0, _ := ret[0].(*core.BlobInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Stat indicates an expected call of Stat
func (_mr *MockClientMockRecorder) Stat(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Stat", reflect.TypeOf((*MockClient)(nil).Stat), arg0, arg1)
}

// Upload mocks base method
func (_m *MockClient) Upload(_param0 string, _param1 string, _param2 io.Reader) error {
	ret := _m.ctrl.Call(_m, "Upload", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Upload indicates an expected call of Upload
func (_mr *MockClientMockRecorder) Upload(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Upload", reflect.TypeOf((*MockClient)(nil).Upload), arg0, arg1, arg2)
}
