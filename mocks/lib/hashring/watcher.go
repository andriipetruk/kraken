// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/uber/kraken/lib/hashring (interfaces: Watcher)

package mockhashring

import (
	gomock "github.com/golang/mock/gomock"
	stringset "github.com/uber/kraken/utils/stringset"
	reflect "reflect"
)

// MockWatcher is a mock of Watcher interface
type MockWatcher struct {
	ctrl     *gomock.Controller
	recorder *MockWatcherMockRecorder
}

// MockWatcherMockRecorder is the mock recorder for MockWatcher
type MockWatcherMockRecorder struct {
	mock *MockWatcher
}

// NewMockWatcher creates a new mock instance
func NewMockWatcher(ctrl *gomock.Controller) *MockWatcher {
	mock := &MockWatcher{ctrl: ctrl}
	mock.recorder = &MockWatcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockWatcher) EXPECT() *MockWatcherMockRecorder {
	return _m.recorder
}

// Notify mocks base method
func (_m *MockWatcher) Notify(_param0 stringset.Set) {
	_m.ctrl.Call(_m, "Notify", _param0)
}

// Notify indicates an expected call of Notify
func (_mr *MockWatcherMockRecorder) Notify(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Notify", reflect.TypeOf((*MockWatcher)(nil).Notify), arg0)
}
