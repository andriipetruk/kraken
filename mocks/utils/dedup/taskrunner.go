// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/uber/kraken/utils/dedup (interfaces: TaskRunner)

package mockdedup

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockTaskRunner is a mock of TaskRunner interface
type MockTaskRunner struct {
	ctrl     *gomock.Controller
	recorder *MockTaskRunnerMockRecorder
}

// MockTaskRunnerMockRecorder is the mock recorder for MockTaskRunner
type MockTaskRunnerMockRecorder struct {
	mock *MockTaskRunner
}

// NewMockTaskRunner creates a new mock instance
func NewMockTaskRunner(ctrl *gomock.Controller) *MockTaskRunner {
	mock := &MockTaskRunner{ctrl: ctrl}
	mock.recorder = &MockTaskRunnerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockTaskRunner) EXPECT() *MockTaskRunnerMockRecorder {
	return _m.recorder
}

// Run mocks base method
func (_m *MockTaskRunner) Run(_param0 interface{}) (interface{}, time.Duration) {
	ret := _m.ctrl.Call(_m, "Run", _param0)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(time.Duration)
	return ret0, ret1
}

// Run indicates an expected call of Run
func (_mr *MockTaskRunnerMockRecorder) Run(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Run", reflect.TypeOf((*MockTaskRunner)(nil).Run), arg0)
}
